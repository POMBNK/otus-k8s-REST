version: '3.8'

services:
  postgres:
    container_name: postgres_kuber
    hostname: postgres
    image: postgres:latest
    volumes:
      - ./deployments/postgres/schema:/docker-entrypoint-initdb.d
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_DB=${POSTGRES_DB:-postgres}
    ports:
      - "5432:5432"

  kuberrest:
    build: .
    container_name: kuberrest
    hostname: kuberrest
    image: kuberrest
    environment:
      - PG_URL=postgres://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@${POSTGRES_DB:-postgres}:5432/${POSTGRES_DB:-postgres}
      - PORT=${HTTP_PORT:-8080}
    ports:
      - "8080:8080"
    depends_on:
      - postgres

  grafana:
    image: grafana/grafana-enterprise
    container_name: grafana
    restart: unless-stopped
    environment:
      - GF_SERVER_ROOT_URL=http://my.grafana.server/
      - GF_INSTALL_PLUGINS=grafana-clock-panel
    ports:
      - '3000:3000'
    volumes:
      - 'grafana_storage:/var/lib/grafana'

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    restart: unless-stopped
    ports:
      - '9090:9090'
    volumes:
      - 'prometheus_storage:/prometheus'

volumes:
  pg-data:
  grafana_storage: { }
  prometheus_storage: { }